
Q1: Write a class named Car that has the following member variables:

yearModel An int that holds the car’s year model.
make A string that holds the make of the car.
speed An int that holds the car’s current speed.

In addition, the class should have the following member functions.

Accessor. Appropriate accessor functions to get the values stored in an object’s yearModel, make, and speed member variables.
accelerate . The accelerate function should add 5 to the speed member variable each time it is called.
brake . The brake function should subtract 5 from the speed member variable each time it is called.
Demonstrate the class in a program that creates a Car object, and then calls the accelerate function five times. After each call to the accelerate function, get
the current speed of the car and display it. Then, call the brake function five times. After each call to the brake function, get the current speed of the car and display it.

SOLUTION:
#include<iostream>
#include<string>
using namespace std;
class Cars
{
    private:
    int yearModel;
    string make;
    int speed;

    public:
    Cars(int y, string m)//parameterized constructor
    {
        cout << m<<" "<<y<<endl;
        cout << "Constructor called" << endl;
        yearModel = y;
        make = m;
        speed = 0;
    }
    int getYearModel()
    {
        return yearModel;
    }
    string getMake()
    {
        return make;
    }
    int getSpeed()
    {
        return speed;
    }
    void accelerate()
    {
        speed += 5;
    }
    void brake()
    {
        speed -= 5;
    }
    ~Cars()//destructor
    {
        cout << "Destructor called" << endl;
    }
};
int main()
{
    Cars car(2022, "HONDA");
    cout<<"**********************"<<endl;
    for(int i = 0; i < 5; i++)
    {
        car.accelerate();
        cout << "Speed after accelerating: " << car.getSpeed() << endl;
    }
    for(int i = 0; i < 5; i++)
    {
        car.brake();
        cout << "Speed after braking: " << car.getSpeed() << endl;
    }
    cout<<"**********************"<<endl;
    return 0;
}

					***************
